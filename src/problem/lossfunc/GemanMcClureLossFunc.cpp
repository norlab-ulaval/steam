//////////////////////////////////////////////////////////////////////////////////////////////
/// \file GemanMcClureLossFunc.cpp
///
/// \author Sean Anderson, ASRL
//////////////////////////////////////////////////////////////////////////////////////////////

#include <steam/problem/lossfunc/GemanMcClureLossFunc.hpp>

namespace steam {

//////////////////////////////////////////////////////////////////////////////////////////////
/// \brief Cost function (basic evaluation of the loss function)
//////////////////////////////////////////////////////////////////////////////////////////////
double GemanMcClureLossFunc::cost(double whitened_error_norm) const {
  double e2 = whitened_error_norm*whitened_error_norm;
  return 0.5 * e2 / (k2_ + e2);
}

//////////////////////////////////////////////////////////////////////////////////////////////
/// \brief Weight for iteratively reweighted least-squares (influence function div. by error)
//////////////////////////////////////////////////////////////////////////////////////////////
double GemanMcClureLossFunc::weight(double whitened_error_norm) const {
  double e2 = whitened_error_norm*whitened_error_norm;
  double k2e2 = k2_ + e2;
  return k2_*k2_/(k2e2*k2e2);
}

} // steam
